quarkus.http.port=8100
quarkus.http.access-log.enabled=true
quarkus.log.file.enable=true
quarkus.log.file.path=logs/application.log
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c] (%t) %s%e%n


quarkus.datasource.db-kind=mariadb
quarkus.datasource.username=${DB_USERNAME}
quarkus.datasource.password=${DB_PASSWORD}
# quarkus.datasource.db-version=5.5.0

quarkus.datasource.jdbc.url=jdbc:mariadb://localhost:3306/testdb

hibernate.hbm2ddl.auto=update

quarkus.test.profile=dev

# Not really necessary, just testing database connection
agroal.datasource.test-connection=true
agroal.datasource.min-size=5
agroal.datasource.max-size=20


# Kafka bootstrap servers
kafka.bootstrap.servers=${KAFKA_SERVER}

# Configure Consumer Group
mp.messaging.incoming.my-queue.connector=smallrye-kafka
mp.messaging.incoming.my-queue.topic=my-topic
mp.messaging.incoming.my-queue.group.id=my-group
mp.messaging.incoming.my-queue.key.deserializer=com.etz.kafka.serializer.UserDeserializer
mp.messaging.incoming.my-queue.value.deserializer=com.etz.kafka.serializer.UserDeserializer
# mp.messaging.incoming.my-queue.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# mp.messaging.incoming.my-queue.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


# Configure a producer
mp.messaging.outgoing.my-producer.connector=smallrye-kafka
mp.messaging.outgoing.my-producer.topic=my-topic
mp.messaging.outgoing.my-producer.key.serializer=com.etz.kafka.serializer.UserSerializer
mp.messaging.outgoing.my-producer.value.serializer=com.etz.kafka.serializer.UserSerializer
# mp.messaging.outgoing.my-producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
# mp.messaging.outgoing.my-producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer


# New topic (Status) Producer
mp.messaging.outgoing.status-out.connector=smallrye-kafka
mp.messaging.outgoing.status-out.topic=status
mp.messaging.outgoing.my-producer.key.serializer=com.etz.kafka.serializer.UserSerializer
mp.messaging.outgoing.my-producer.value.serializer=com.etz.kafka.serializer.UserSerializer

# New topic (Status) Consumer
mp.messaging.incoming.status-in.connector=smallrye-kafka
mp.messaging.incoming.status-in.topic=status
mp.messaging.incoming.status-in.group.id=my-group
mp.messaging.incoming.my-queue.key.deserializer=com.etz.kafka.serializer.UserDeserializer
mp.messaging.incoming.my-queue.value.deserializer=com.etz.kafka.serializer.UserDeserializer